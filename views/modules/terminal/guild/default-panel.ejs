<div class="default-alpha-block 1st flex inform-panel flex-dir-column" style="overflow: hidden;">
  <div class="line-one flex align-center justify-between">
    <p><%= lang[name].statisticsName %></p>
    <button>
      <img src="">
    </button>
  </div>
  <div class="line-two flex">
    <div class="bar">
      <span id="maxY"></span>
      <p id="nameY"></p>
    </div>
    <div class="canwas-wrapper">
      <canvas id="<%= name %>"></canvas>
    </div>
  </div>
  <div class="line-three flex">
    <div class="toggler">
      <button id="toDays">1d</button>
      <button id="toWeeks">1w</button>
    </div>
    <p id="nameX"></p>
    <span id="maxX"></span>
  </div>
</div>
<script>
(function() {
  const rawData = JSON.parse(`<%- JSON.stringify(stat) %>`);
  const statisticsName = "<%= name %>";

  const labels = [];
  const data = [];

  let previousValue = 0;

  const lastDates = Object.keys(rawData).slice(-2);

  lastDates.forEach(date => {
  const hours = Object.keys(rawData[date]).sort();
  hours.forEach(hour => {
    const entry = rawData[date][hour][statisticsName] || 0;
    data.push(entry);
    labels.push(`${hour}:00`);
  });
});

  function stringToColor(str) {
    let hash = 0;
    for (let i = 0; i < str.length; i++) {
      hash = str.charCodeAt(i) + ((hash << 5) - hash);
    }
    const color = Math.floor(Math.abs((Math.sin(hash) * 16777215) % 16777215)).toString(16);
    return `#${"000000".substring(0, 6 - color.length) + color}`;
  }

  const borderColor = stringToColor(statisticsName);

  const canvas = document.getElementById('<%= name %>').getContext('2d');

  new Chart(canvas, {
    type: 'line',
    data: {
      labels: labels,
      datasets: [
        {
          data: data,
          borderColor: borderColor,
          borderWidth: 3,
          pointRadius: 0,
          lineTension: 0.2,
        },
      ],
    },
    options: {
      responsive: true,
      maintainAspectRatio: false, // Установите это значение в false
      plugins: {
        legend: {
          display: false,
          opacity: 0,
        },
      },
      scales: {
        x: {
          display: false,
        },
        y: {
          display: false,
          beginAtZero: true,
        },
      },
    },
  });
})();
</script>