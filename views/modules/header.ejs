<style>
header {
  height: 80px;
  z-index: 2;
  position: fixed;
  top: 0px;
  justify-content: space-between;
  padding: 0 2vw;
  width: 96vw;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  align-items: center;
}
header-background {
  z-index: 1;
  top: -80px;
  height: 80px;
  width: 100vw;
  left: 0%;
  position: fixed;
  display: flex;
  background: linear-gradient(180deg, rgb(22 22 22 / 30%) 0%, rgb(75 75 75 / 5%) 100%);
  backdrop-filter: blur(15px);
}
.nav {
  gap: 10px;
  height: 100%;
  justify-content: center;
  align-items: center;
}

.nav > button {
  height: 100%;
  position: relative;
  font-weight: 500;
  width: 120px;
  text-align: center;
  text-transform: uppercase;
}
.nav button > img {
  filter: invert(100%);
  height: 15px;
  width: 15px;
  margin-left: 10px;
  transition: all 0.2s var(--trans);
}
.nav button:hover > img {
  transform: rotateZ(90deg);
}
.nav button bar {
  position: absolute;
  min-height: 80px;
  background: var(--c-24);
  backdrop-filter: blur(15px);
  display: flex;
  opacity: 0;
  visibility: hidden;
  flex-direction: column;
  top: 80px;
  width: 240px;
  border-radius: 14px;
  transition: all 0.2s ease;
  transform: translateY(-16px);
  overflow: hidden;
  box-shadow: 0 1px 3px var(--c-48);
  text-transform: initial;
}
.nav button:hover bar {
  opacity: 1;
  visibility: visible;
  transform: translateY(0px);
}
.nav button bar img {
  height: 40px;
  width: 40px;
  border-radius: 20px;
}
.nav button bar h3 {
  text-align: left;
  font-weight: 600;
  color: var(--w);
  transition: all 0.2s cubic-bezier(.21,.29,0,.94) !important;
}
.nav button bar p {
  text-align: left;
  font-weight: 400;
  color: var(--c-64);
  height: 100%;
}
header line {
  width: 1px;
  background: white;
  height: 15px;
}
header line:last-child {
  display: none;
}
header > img {
  filter: brightness(1);
  height: 40px;
  -webkit-user-drag: none;
  user-select: none;
}
.user-onlogin {
  justify-content: flex-end;
  grid-column: 3 / 4;
}
.login-wrapper {
  grid-column: 3 / 4;
}
.user {
  color: #fff;
  font-weight: 500;
  min-width: 120px;
  height: 40px;
  border-radius: 20px;
  background: var(--c-24);
  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);
  position: relative;
  box-shadow: 0 1px 3px var(--c-48);
}
.user * {
  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);
}

.user .avatar {
  border-radius: 100%;
  height: 38px;
  width: 38px;
  pointer-events: none;
}
.user p {
  min-width: 50px;
  padding: 0 15px;
  text-align: center;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  white-space: no-wrap;
}
header .logo {
  height: 60px;
}

#arrow-icon path.default-path {
  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);
}

#arrow-icon.hovered path {
  d: path("M2 12H18M18 12L13 7M18 12L13 17");
}
.temp-button svg {
  transform: translateX(-3px);
}
.temp-button:hover svg {
  transform: translateX(10px);
}
.temp-button * {
  transition: all 0.45s cubic-bezier(0.65, 0, 0.076, 1);
}
.temp-button {
  display: flex;
  cursor: pointer;
  color: var(--b);
  align-items: center;
  justify-content: space-between;
  position: relative;
  width: 120px;
  height: 40px;
}
.temp-button .button-text {
  position: absolute;
  width: calc(100% - 40px);
  right: 0px;
  font-weight: 500;
}
.temp-button .circle {
  position: absolute;
  margin: 0;
  width: 40px;
  display: flex;
  align-items: center;
  height: 40px;
  background: var(--c-24);
  border-radius: 20px;
  box-shadow: 0 1px 3px var(--c-48);
}

.temp-button:hover .circle {
  width: 100%;
}

.temp-button:hover .button-text {
 color: #fff;
}
@media (max-width: 1080px) {
  header {
    padding: 0 2.5%;
    width: calc(100vw - 5%);
  }
}
@media (max-width: 767px) {
header {
  padding: 0 2.5%;
  width: calc(100vw - 5%);
  grid-template-columns: repeat(2, 1fr);
}
header > img {
  height: 7vw;
}
.nav {
  display: none;
}
.login-wrapper {
  grid-column: 2 / 3;
}
.user {
  height: 7vw;
  width: 22vw;
  border-radius: 3.5vw;
}
.user .avatar {
  height: calc(7vw - 2px);
  width: calc(7vw - 2px);
  border-radius: calc(3.5vw - 1px);
}

.user-onlogin {
  margin-right: 10px;
  gap: 15px;
}
.temp-button {
  height: 7vw;
  width: 22vw;
}
.temp-button .circle {
  height: 7vw;
  width: 7vw;
}
.temp-button .button-text {
  width: calc(100% - 7vw);
}
.temp-button svg {
  transform: translateX(-3px);
  width: 7vw;
  height: 7vw;
}
.temp-button:hover svg {
  transform: translateX(1vw);
}
.nav button bar {
  backdrop-filter: blur(0px);
}
}
.plate .p-wrapper {
  height: 42px;
  overflow: hidden;
  transition: all 0.2s cubic-bezier(.21,.29,0,.94) !important;
}
.plate:hover .p-wrapper {
  height: 0px;
}
.plate:hover h3 {
  font-size: 16px;
}
.plate {
  transition: all 0.2s ease;
  padding: 12px;
  gap: 12px;
}
.plate .text {
  align-items: flex-start;
  justify-content: center;
}
.guild-avatar {
  height: 66px;
  width: 66px;
  min-width: 66px;
  border-radius: 12px;
  background: var(--c-48);
}
.plate:hover {
  background: var(--c-36);
}
.verified {
  height: 35px;
  width: 35px;
  border-radius: 10px;
  background-color: var(--c-36);
}
.verified .icon {
  height: 25px;
  width: 25px;
  pointer-events: none;
}
</style>
<header>
    <img src="https://api.impactium.fun/logo/texted-logo.svg" onclick="toHub()">
    <% if (typeof nav !== 'undefined') { %>
      <div class="nav flex">
        <% Object.keys(nav).forEach(category => { %>
          <button class="flex-dir-row center">
            <%= lang[category] %>
            <img src="https://api.impactium.fun/ux/to-left.svg">
            <bar>
              <% Object.values(nav[category]).forEach(obj => { %>
                <div class="plate flex-dir-row center-v" onclick="redirect(`<%= obj.action %>`)">
                  <div class="guild-avatar flex center">
                    <img src="<%= obj.logo %>">
                  </div>
                  <div class="text flex-dir-column">
                    <h3><%= obj.name %></h3>
                    <div class="p-wrapper">
                      <p><%= obj.description %></p>
                    </div>
                  </div>
                </div>
              <% }); %>
            </bar>
          </button>
          <line></line>
        <% }); %>
      </div>      
    <% } %>
    <% if (user.id) { %>
      <div class="user-onlogin gap center-h center-v" style="justify-content: flex-end;">
        <% if (user.isVerified) { %>
          <div class="verified flex center">
            <img src="https://impactium.fun/static/images/verified.svg" class="icon">
          </div>
        <% } %>
        <button class="user flex center-v center-h">
          <% if (user.avatar) { %>
            <img src="<%= user.avatar %>" class="avatar">
          <% } %>
          <p class="button-text"><%= user.displayName %></p>
        </button>
        <button id="logout" onclick="logout()" class="temp-button">
          <div class="circle">
            <svg id="arrow-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24">
              <path d="M18 12H18M18 12L13 7M18 12L13 17" stroke="#fff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </div>
          <div class="button-text"><%= lang.logout %></div>
        </button>
      </div>
    <% } else { %>
      <div class="flex-dir-row gap login-wrapper" style="justify-content: flex-end;">
        <button onclick="login()" class="login temp-button">
          <div class="circle">
            <svg id="arrow-icon" xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24">
              <path d="M18 12H18M18 12L13 7M18 12L13 17" stroke="#fff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </div>
          <span class="button-text txt-sh"><%= lang.login %></span>
        </button>
      </div>
    <% } %>
  </header>
  <header-background></header-background>

<script>
const headerBackground = document.querySelector('header-background');

window.addEventListener('scroll', () => {
  const scrollY = window.scrollY;
  const newTopValue = Math.max(-80, Math.min(0, -80 + scrollY));
  headerBackground.style.top = `${newTopValue}px`;
});

const arrowIcon = document.querySelector('.temp-button');

arrowIcon.addEventListener('mouseenter', () => {
  document.getElementById('arrow-icon').classList.add('hovered');
});

arrowIcon.addEventListener('mouseleave', () => {
  document.getElementById('arrow-icon').classList.remove('hovered');
});

function logout() {
  window.location.href = "/logout";
}
function login() {
  window.location.href = "/login";
}
function terminal() {
  window.location.href = "/terminal";
}
function redirect(link) {
  window.location.href = link;
}
function toHub() {
  window.location.href = "https://impactium.fun";
}

</script>