<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="shortcut icon" href="<%= user.avatarOfGuild %>" type="image/x-icon">
  <title>PHP Compiler</title>
  <link rel="stylesheet" href="/static/style/reset.css">
  <link rel="stylesheet" href="https://impactium.fun/static/style/style_global.css?v=8">
  <script src="/static/script/jquery.js"></script>
</head>
<body>
<div class="preloader center" style="z-index: 9;">
  <div class="honeycomb">
    <div></div>
    <div></div>
    <div></div>
    <div></div>
    <div></div>
    <div></div>
    <div></div>
  </div>
</div>
<style>
@import url('https://fonts.googleapis.com/css2?family=Monoton&display=swap');
* {
  font-family: 'Manrope', sans-serif;
  padding: 0px;
}

button {
  outline: none;
  background: none;
  border: none;
}

body {
  background: url(https://api.impactium.fun/backgrounds/topography.svg);
  background-color: #212121;
  width: 100vw;
  min-height: 100vh;
  display: flex;
  overflow: hidden;
  flex-direction: column;
  background-position: center;
  align-items: center;
}

main {
  margin-top: 90px;
  width: calc(100vw - 40vw - 20px);
  padding: 10px;
  backdrop-filter: blur(5px);
  border: 1px solid var(--backdrop-border);
  background: var(--backdrop-background);
  border-radius: 30px;
  display: flex;
  flex-direction: column;
  position: relative;
  min-height: calc(100vh - 120px);
  align-items: center;
  gap: 10px;
}

header {
  display: flex;
  width: calc(100vw - 40vw);
  padding: 0 20vw;
  justify-content: space-between;
  align-items: center;
  position: fixed;
  z-index: 8;
  height: 80px;
  background: var(--black-one);
}
header div {
  display: flex;
  align-items: center;
}
.on-login {
  gap: 15px;
}
.title {
  gap: 15px;
}
.title h1 {
  left: 0px;
  font-family: 'Monoton', cursive;
  color: white;
  text-transform: uppercase;
  white-space: nowrap;
  font-size: 40px;
  text-align: center;
  position: relative;
  color: transparent;
  cursor: pointer;
}

.title img {
  height: 60px;
  width: 60px;
  border-radius: 100%;
}

.title h1:before {
  content: "Impactium";
  position: absolute;
  color: white;
  left: 0;
  transition: all 0.3s ease-out;
  transform: translateY(50%) rotateX(-90deg);
}

.title h1::after {
  content: "PHP Compiler";
  color: white;
  position: absolute;
  left: 0;
  transition: all 0.3s ease-in;
}

.title h1:hover::after {
  transform: translateY(-50%) rotateX(90deg);
  transition-timing-function: ease-out; /* Анимация при наведении (ease-in) */
}

.title h1:hover::before {
  transform: translateY(0%) rotateX(0deg);
  transition-timing-function: ease-in; /* Анимация при наведении (ease-out) */
}

.gold-button {
  min-width: 120px;
  height: 40px;
  border: none;
  border-radius: 20px;
  background: linear-gradient(to right,#77530a,#ffd277,#77530a,#77530a,#ffd277,#77530a);
  background-size: 250%;
  background-position: left;
  color: #ffd277;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition-duration: 1s;
  font-family: 'Manrope', sans-serif;
}

.gold-button::before {
  position: absolute;
  content: "";
  color: #ffd277;
  left: 50%;
  transform: translateX(-50%);
  width: calc(100% - 4px);
  height: calc(100% - 4px);
  border-radius: 18px;
  transition-duration: 1s;
  background-color: rgba(0, 0, 0, 0.842);
  background-size: 200%;
}

.gold-button:hover {
  background-position: right;
  transition-duration: 1s;
}

.gold-button:hover::before {
  background-position: right;
  transition-duration: 1s;
}

.gold-button p,
.gold-button a {
  z-index: 0;
  text-decoration: none;
  color: #ffd277;
  font-size: 16px;
  font-weight: 500;
  letter-spacing: 0.5px;
  white-space: nowrap;
  flex: 1;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.user-info-text-wrapper {
  display: flex;
  margin-right: 4px;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: calc(100% - 4px);
  flex: 1;
  padding-left: 10px;
  padding-right: 10px;
}

.avatar img {
  height: 36px;
  width: 36px;
  border-radius: 100%;
  z-index: 0;
  pointer-events: none;
  margin-left: 2px;
}

@keyframes background-animation {
  0% {
    background-position: left;
  }
  100% {
    background-position: right;
  }
}
.user-info {
  transition: border-radius 0.3s var(--trans);
  pointer-events: <% if (user.isRaidLeader || user.isAdmin || user.isModerator) { %>all<% } else { %>none<% } %>;
}
.user-info:before {
  transition: border-radius 0.3s var(--trans);
}
.user-info:hover:before {
  border-radius: 18px 18px 3px 3px;
}
.user-info:hover {
  border-radius: 20px 20px 5px 5px;
}
language {
  z-index: 9;
  position: absolute;
  top: 40px;
  transform: translateY(-50%);
  left: -130px;
  height: 40px;
  display: flex;
  align-items: center;
  gap: 5px;
  transition: all 0.3s var(--trans);
  background: var(--black-two);
  border-radius: 0 20px 20px 0;
}
language.active {
  left: 0px;
}
language .list {
  padding-left: 5px;
  display: flex;
  flex-direction: row;
  gap: 5px;
  width: 120px;
}
language .list img {
  height: 20px;
}
language .toggler {
  height: 40px;
  width: 40px;
  cursor: pointer;
  transition: all 0.3s var(--trans);
  border: 1px solid transparent;
}
language .toggler img {
  height: 30px;
  width: 30px;
}
@media (max-width: 767px) {
  header .title h1 {
    display: none;
  }
  header .title img {
    width: calc(25vw / 1.5);
    height: calc(25vw / 1.5);
  }
  header .gold-button {
    min-width: 25vw;
    height: calc(25vw / 2);
    border-radius: calc(25vw / 2 / 2);
  }
  header .gold-button:before {
    border-radius: calc(25vw / 2 / 2);
  }
  header .gold-button p,
  header .gold-button a {
    font-size: 100%;
  }
  .avatar img {
    width: calc(25vw / 2 - 4px);
    height: calc(25vw / 2 - 4px);
  }
  header {
    padding: 0 2.5vw;
    width: calc(100% - 5vw);
  }
  main {
    padding: 80px 2.5vw 0 2.5vw;
    width: calc(100% - 5vw);
    overflow-x: hidden;
    overflow-y: scroll;
  }
  language {
    top: -145px;
    left: 33%;
    transform: translateX(-50%);
    flex-direction: column;
    width: 40px;
    height: unset;
    border-radius: 0 0 20px 20px;
  }
  language.active {
    left: 33%;
    top: 0px;
  }
  language .toggler {
    border-radius: 0 0 20px 20px;
  }
  language.active .toggler {
    border: 1px solid var(--w);
  }
  language .list {
    flex-direction: column;
    width: unset;
    padding-top: 5px;
    padding-left: 0;
  }
  #logout {
    display: none;
  }
}

.code-container {
  display: flex;
  width: 100%;
  position: relative;
  overflow: hidden;
  border-radius: 10px;
  border: 1px solid var(--backdrop-border);
}
.code-container:after {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backdrop-filter: blur(5px);
  content: <% if (!user.id) { %>""<% } %>;
}

#phpCode::-webkit-scrollbar {
  width: 10px;
}

#phpCode::-webkit-scrollbar-track {
  background: var(--black-three);
}

#phpCode::-webkit-scrollbar-thumb {
  background-color: var(--black-one);
  border-radius: 10px;
  border: 2px solid var(--black-three);
}

.code-container .blocker {
  z-index: 2;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 50px;
  padding: 0 10px;
  background: var(--black-one);
  border-radius: 25px;
}
.code-container .blocker img {
  height: 30px;
  width: 30px;
}
.code-container .blocker p {
  flex: 1;
  text-align: center;
  color: var(--w);
  font-weight: 500;
  font-size: 16px;
  padding: 0 10px;
}
.line-numbers {
  padding: 10px;
  background-color: var(--black-three);
  border-right: 1px solid #e8e8e8;
  user-select: none;
  font-family: monospace;
  white-space: pre-wrap;
  line-height: 15px;
  overflow: hidden;
  min-height: 200px;
  color: #8d8d8d;
  position: absolute;
}

#phpCode {
  flex-grow: 1;
  color: var(--w);
  resize: vertical;
  min-height: 200px;
  border: none;
  outline: none;
  font-family: monospace;
  white-space: pre-wrap;
  word-wrap: break-word;
  max-height: 300px;
  width: calc(100% - 20px);
  padding: 10px;
  padding-left: 45px;
  line-height: 15px;
  background-color: #3B3B3B;
}
.defaultButton {
  text-align: center;
  height: 40px;
  min-width: 120px;
  outline: none;
  padding: 5px;
  background: var(--black-one);
  color: var(--w);
  transition: all 0.3s var(--trans);
  border: 1px solid var(--backdrop-border);
  border-radius: 25px;
  justify-content: space-between;
}
.defaultButton:hover {
  box-shadow: 0px 0px 3px 0px var(--w);
}
.defaultButton .image-wrapper {
  height: 30px;
  width: 30px;
  border-radius: 15px;
  background: var(--black-three);
}
.defaultButton img {
  height: 20px;
  width: 20px;
  position: absolute;
  opacity: 1;
}
.defaultButton img.loader {
  opacity: 0;
}
.defaultButton img.loader.active {
  opacity: 1;
  animation: loader 1s infinite;
  background: var(--black-three);
}

@keyframes loader {
  0% {
    transform: rotateZ(0deg);
    }
  100% {
    transform: rotateZ(359deg);
  }
}
.defaultButton p {
  flex: 1;
  padding: 0 10px;
  text-align: center;
}
main .bottom {
  justify-content: space-between;
  width: 100%;
  gap: 10px;
}
#phpRendered {
  position: relative;
  border-radius: 20px;
  background: #e8e8e869;
  transition: all 0.3s var(--trans);
  padding: 10px;
  bottom: 0px;
  width: calc(100% - 20px);
  cursor: pointer;
  flex: 1;
}
#phpRendered:hover {
  background: #e8e8e8e8;
  transform: scale(1.01);
}
#phpRendered.active {
  position: absolute;
  width: 95vw;
  height: calc(100vh - 120px);
  top: 0;
  background: #e8e8e8;
  left: unset;
  cursor: default;
  z-index: 5;
  border-radius: 5px;
}
#phpRendered.active:hover {
  transform: none;
}
#phpRendered * {
  color-scheme: only light;;
}
p.aboutRender {
  width: 100%;
  color: #63636390;
  text-shadow: 0px 0px 1px #63636390;
  text-align: center;
}
main .top {
  display: flex;
  flex-direction: row;
  width: 100%;
  gap: 10px;
  height: 40px;
  align-items: flex-start;
}
.file-button {
  background: var(--black-one);
  color: var(--w);
  padding: 0 5px;
  border-radius: 20px;
  height: 40px;
  border: 1px solid var(--backdrop-border);
  display: flex;
  align-items: center;
  justify-content: space-between;
  text-shadow: 0px 2px 3px var(--backdrop-border);
  min-width: 80px;
  text-align: center;
  cursor: pointer;
  transition: all 0.3s var(--trans);
}
.existing-file:hover {
  transform: translateY(-3px);
}
.existing-file.active {
  box-shadow: 0px 0px 3px 0px var(--violet);
  color: var(--violet);
  text-shadow: none;
}
.existing-file.active:hover {
  box-shadow: 0px 0px 3px 0px var(--remove-accent);
  color: var(--remove-accent);
  text-shadow: none;
}

.existing-file p {
  transition: all 0.3s var(--trans);
  padding: 0 10px;
  width: calc(100%);
  overflow: hidden;
  height: 30px;
  border-radius: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.existing-file.active p {
  width: calc(100% - 60px);
  padding: 0 15px;
}
.existing-file.active p.on-delete-text {
  animation: reduceWidthText 3s linear forwards;
}
.existing-file.active.delete {
  animation: deleteFileBlockAnimation 2s ease-in-out forwards;
}
@keyframes deleteFileBlockAnimation {
  0% {
    transform: translateY(0%);
  }

  50% {
    transform: translateY(-200%);
  }

  100% {
    transform: translateY(-200%);
  }
}
.file-button .image-wrapper {
  height: 0px;
  width: 0px;
  overflow: hidden;
  background: var(--black-three);
  border-radius: 15px;
  align-items: center;
  justify-content: center;
  transition: all 0.3s var(--trans);
}
.existing-file.active .image-wrapper {
  display: flex;
  height: 30px;
  width: 30px;
  transition: all 0.3s var(--trans);
}
.existing-file.active .image-wrapper.on-delete {
  animation: expandWidthImage 3s linear forwards;
}
.existing-file .image-wrapper svg path {
  transition: all 0.3s var(--trans);
  stroke: #888888;
  height: 20px;
  width: 20px;
}
.existing-file.active:hover .image-wrapper svg path {
  stroke: var(--remove-accent);
}
.existing-file.active.delete .image-wrapper {
  width: 100%;
  padding: 0 20px;
}
.existing-file.active.delete p {
  width: 0px;
  padding: 0px;
}

@keyframes expandWidthImage {
  0% {
    width: 30px;
    padding: 0;
    }
  100% {
    width: 100%;
    padding: 0 20px;
  }
}
@keyframes reduceWidthText {
  0% {
    width: calc(100% - 70px);
    padding: 0 20px;
  }
  100% {
    width: 0px;
    padding: 0px;
  }
}

.new-file p {
  padding: 0 10px;
  flex: 1;
  overflow: hidden;
  height: 30px;
  border-radius: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.new-file .image-wrapper {
  display: flex;
  height: 30px;
  width: 30px;
  transition: all 0.3s var(--trans);
  position: relative;
}
.new-file .image-wrapper img {
  position: absolute;
  height: 20px;
  transition: all 0.3s var(--trans);
  width: 20px;
}
.new-file .image-wrapper img.plus {
  filter: invert(100%);
  opacity: 1;
}
.new-file:hover .image-wrapper img.plus,
.new-file.active .image-wrapper img.plus {
  filter: invert(100%);
  transform: rotateZ(180deg);
  opacity: 0;
}
.new-file .image-wrapper img.file {
  transform: rotateZ(-180deg);
  opacity: 0;
}
.new-file:hover .image-wrapper img.file,
.new-file.active .image-wrapper img.file {
  transform: rotateZ(0deg);
  opacity: 1;
}
.new-file:hover,
.new-file.active {
  transform: none;
  box-shadow: 0px 0px 3px 0px lime;
}
.new-file:hover,
.new-file.active p {
  color: lime;
}

.full-screen-toggle {
  height: 50px;
  border-radius: 30px;
  background: #161616e6;
  backdrop-filter: blur(10px);
  color: var(--w);
  font-weight: 500;
  font-size: 18px;
  position: absolute;
  z-index: 3;
  bottom: 20px;
  transform: translateY(200%);
  border: 1px solid var(--backdrop-border);
  box-shadow: 0px 0px 10px 0px var(--black-two);
  transition: all 0.3s var(--trans);
}
.full-screen-toggle.active {
  transform: translateY(0);
  z-index: 6;
}
.full-screen-toggle.active:hover {
  background: var(--black-one);
  box-shadow: 0px 0px 0px 0px var(--black-two);
  border: none;
}

.full-screen-toggle p {
  padding: 0 20px;
}
.filename-wrapper {
  position: absolute;
  pointer-events: none;
  top: calc(50% + 20px);
  transform: translateY(calc(-50%));
  opacity: 0;
  transition: all 0.3s var(--trans);
  filter: blur(5px);
  width: 400px;
  height: 300px;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 50px;
  width: 270px;
  padding: 0 5px;
  border-radius: 25px;
  background: var(--black-one);
}
.filename-wrapper .image-wrapper {
  background: var(--w);
  height: 40px;
  width: 40px;
  border-radius: 20px;
  cursor: not-allowed;
}
.filename-wrapper .image-wrapper.active {
  pointer-events: all;
  cursor: pointer;
}
.filename-wrapper .image-wrapper img {
  filter: brightness(0) saturate(100%) invert(23%) sepia(19%) saturate(0%) hue-rotate(256deg) brightness(97%) contrast(87%);
  height: 25px;
  width: 25px;
  transition: all 0.3s var(--trans);
}
.filename-wrapper .image-wrapper img.active {
  filter: brightness(1000%) saturate(100%) invert(100%);
}
.filename-wrapper.active {
  pointer-events: all;
  transform: translateY(calc(-50% + -75px));
  filter: blur(0px);
  opacity: 1;
}
.filename-wrapper .php-file-name {
  color: var(--w);
  height: 100%;
  background: none;
  outline: none;
  flex: 1;
  border: none;
  padding: 0 10px;
  font-size: 16px;

}
.filename-wrapper:after {
  content: "";
  opacity: 0;
  pointer-events: none;
  transition: all 0.3s var(--trans);
  transform: translateX(-50vw) translateY(-50vh);
  position: absolute;
  top: -10px;
  left: 0px;
  width: 200vw;
  height: 200vh;
  background: rgb(6 6 6 / 31%);
  z-index: -1;
}
.filename-wrapper.active:after {
  pointer-events: all;
  opacity: 1;
}
</style>


<language>
  <div class="list">
    <% const availableLanguages = ['en', 'uk', 'ru', 'it', 'is']; %>
    <% for (const langCode of availableLanguages) { %>
      <a href="/lang/<%= langCode %>"><img src="https://api.impactium.fun/langs/<%= langCode %>.png"></a>
    <% } %>
  </div>
  <button class="toggler center" id="toggleLanguageChooseButton" onclick="toggleLanguageChoosePanel()">
    <img class="invert" src="https://api.impactium.fun/ux/earth-globe.svg">
  </button>
</language>

  <header>
    <div class="title" onclick="toHub()">
      <h1 id="title" >PHP Compiler</h1>
    </div>
    <% if (user.id) { %>
    <div class="on-login">
      <div class="gold-button user-info" onclick="userinfo('<%= user.id %>')">
        <div class="avatar">
          <% if (user.avatar) { %>
            <img src="https://cdn.discordapp.com/avatars/<%= user.id %>/<%= user.avatar %>.png" alt="Avatar" width="100" height="100" onerror="this.src='https://api.impactium.fun/logo/asset.png'">
          <% } %>
        </div>
        <div class="user-info-text-wrapper"><p><%= user.visibleName %></p></div>
      </div>
      <div id="logout" class="gold-button">
        <a href="/logout"><%= lang.logout %></a>
      </div>
    <% } else { %>
      <button id="auth" onclick="auth()" class="gold-button">
        <a href="/login"><%= lang.login %></a>
      </button>
    <% } %>
  </header>
  <main>
    <% if (user.id) { %>
      <div class="top">
        <div class="file-button new-file" onclick="newFile()" id="newFileButton">
          <p><%= lang.newFile %></p>
          <div class="image-wrapper">
            <img class="plus" src="https://api.impactium.fun/ux/plus.svg">
            <img class="file" src="https://api.impactium.fun/ux/file-white.svg">
          </div>
        </div>
        <% files.forEach(file => { %>
          <% if (file === 'default') return %>
          <div class="file-button existing-file <% if (file === filename) { %> active <% } %>" onclick="phpOpen('<%= file %>', this)">
            <p><%= file %>.php</p>
            <div class="image-wrapper" onmousedown="deleteFileTimer('<%= file %>', this)">
              <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewBox="0 0 24 24" fill="none">
                <path d="M4 6H20M16 6L15.7294 5.18807C15.4671 4.40125 15.3359 4.00784 15.0927 3.71698C14.8779 3.46013 14.6021 3.26132 14.2905 3.13878C13.9376 3 13.523 3 12.6936 3H11.3064C10.477 3 10.0624 3 9.70951 3.13878C9.39792 3.26132 9.12208 3.46013 8.90729 3.71698C8.66405 4.00784 8.53292 4.40125 8.27064 5.18807L8 6M18 6V16.2C18 17.8802 18 18.7202 17.673 19.362C17.3854 19.9265 16.9265 20.3854 16.362 20.673C15.7202 21 14.8802 21 13.2 21H10.8C9.11984 21 8.27976 21 7.63803 20.673C7.07354 20.3854 6.6146 19.9265 6.32698 19.362C6 18.7202 6 17.8802 6 16.2V6M14 10V17M10 10V17" stroke="#454545" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
          </div>
        <% }); %>
      </div>
    <% } %>
    <div class="code-container">
      <div class="line-numbers"></div>
      <textarea id="phpCode" ><% if (code) { %><%- code %><% } %></textarea>
      <button class="blocker center <% if (user.id) { %>none<% } %>">
        <img src="https://api.impactium.fun/ux/lock.svg">
        <p><%= lang.youMustBeLoggined %></p>
    </div>
    <% if (user.id) { %>
      <div class="bottom flex-dir-row" style="justify-content: flex-end;">
        <button class="savePhpCode defaultButton center" id="phpSave" onclick="savePHP()">
          <p><%= lang.phpSave %></p>
          <div class="image-wrapper center">
            <img class="icon" src="https://api.impactium.fun/ux/file-arrow.svg">
            <img class="loader" src="https://api.impactium.fun/ux/loader.svg">
          </div>
        </button>
        <button class="sendPhpCode defaultButton center" id="phpCompile" onclick="phpRender()">
          <p><%= lang.phpRender %></p>
          <div class="image-wrapper center">
            <img src="https://api.impactium.fun/ux/sparkles.svg">
          </div>
        </button>
      </div>
    <% } %>
    <div id="phpRendered" class="<% if (!rendered) { %>center<% } %>" onclick="openFullScreen()">
      <% if (rendered) { %>
        <%- rendered %>
      <% } else { %>
        <p class="aboutRender"><%= lang.phpDescription %></p>
      <% } %>
    </div>
    <button onclick="closeFullScreen()" class="full-screen-toggle center" id="closeFullScreenButton">
      <p><%= lang.closeFullScreenMode %></p><img>
    </button>
    <div class="filename-wrapper">
      <input class="php-file-name center" id="phpFileName" placeholder="Filename (required)">
      <div class="image-wrapper center" onclick="createNewFile()">
        <img id="saveImage" src="https://api.impactium.fun/ux/file-white.svg">
      </div>
    </div>
  </main>

<script>
$(window).on('load', function() {
  $('.preloader').remove();
});

const board = document.getElementById('phpRendered');
const phpCode = document.getElementById('phpCode');
const newFileButton = document.getElementById('newFileButton');
const codeWrapper = document.querySelector('.code-container');
const phpFilenameBlock = document.getElementById('phpFileName');
const phpFilenameWrapper = document.querySelector('.filename-wrapper');
const lineNumbers = document.querySelector('.line-numbers');
const toggleLanguageChooseButton = document.getElementById('toggleLanguageChooseButton');
const topNav = document.querySelector('.top');
const bottomNav = document.querySelector('.bottom');
const closeFullScreenButton = document.getElementById('closeFullScreenButton');

function phpRender() {
  const code = document.getElementById('phpCode').value;
  board.classList.remove('center');

  fetch(`/php/render`, {
      method: 'POST',
      headers: {
          'Content-Type': 'application/json',
      },
      body: JSON.stringify({ code }),
  })
  .then(response => {
    return response.text();
  })
  .then(data => {
    clearRenderedArea();
    board.classList.remove('center');
    board.innerHTML = data;
  })
  .catch(error => {
    console.error('Error:', error);
    clearRenderedArea()
  });
}

function phpOpen(filename, selectedBlock = undefined) {
  const exSelectedBlock = document.querySelector('.top .existing-file.active');
  if (exSelectedBlock === selectedBlock) return
  if (!selectedBlock) {
    selectedBlock = exSelectedBlock;
  }

  const url = window.location.href;
  const urlParts = url.split('/');
  let folder = urlParts[urlParts.length - 2];
  if (folder === 'php' || folder === 'impactium.fun') { folder = undefined}


  const blocks = document.querySelectorAll('.top .existing-file');
  blocks.forEach(block => {
    block.classList.remove('active');
  });
  selectedBlock.classList.add('active');

  fetch(`/php/open`, {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({ filename, folder }),
  })
  .then(response => {
    return response.text();
  })
  .then(data => {
    data = JSON.parse(data);

    history.pushState(null, null, `/php/f/${data.userId}/${filename}`);
    clearRenderedArea()
    board.classList.remove('center');

    board.innerHTML = data.rendered || data.error || "";
    board.classList.remove('center');
    phpCode.value = data.code;
    updateLineNumbers();
  })
  .catch(error => {
    console.error('Error:', error);
    clearRenderedArea()
  });
}

function clearRenderedArea() {
  board.innerHTML = `<p class="aboutRender">Тут будет отображатся отрендеренная страница</p>`;
  board.classList.add('center');
}

function newFile() {
  clearRenderedArea();
  phpCode.value = '';
  const blocks = document.querySelectorAll('.top .existing-file');
  blocks.forEach(block => {
    block.classList.remove('active');
  });
  updateLineNumbers();
  history.pushState(null, null, `/php`);
  newFileButton.classList.add('active');
  phpFilenameWrapper.classList.add('active');
  phpFilenameBlock.addEventListener('input', checkValidFilename);
}

function checkValidFilename() {
  const filename = phpFilenameBlock.value;
  const saveImage = document.getElementById('saveImage');
  const imageWrapper = document.querySelector('.filename-wrapper .image-wrapper');

  if (filename.length > 3 && filename.length < 20) {
    saveImage.classList.add('active');
    imageWrapper.classList.add('active');
    return true;
  } else if (filename.length > 20) {
    phpFilenameBlock.value = filename.substring(0, 20);
    return true;
  } else {
    saveImage.classList.remove('active');
    imageWrapper.classList.remove('active');
    return false;
  }
}


phpCode.addEventListener('input', updateLineNumbers);
phpCode.addEventListener('scroll', updateScrollSync);

function updateLineNumbers() {
  const lines = phpCode.value.split('\n').length;

  const lineNumbersHTML = Array.from({ length: lines }, (_, index) => `<div>${index + 1}</div>`).join('');

  lineNumbers.innerHTML = lineNumbersHTML;

  updateScrollSync();
}

function updateScrollSync() {
  const lineBlock = document.querySelector('.line-numbers div');
  lineBlock.style.marginTop = `-${phpCode.scrollTop}px`;
}

updateLineNumbers()

function toHub() {
  window.location.href = "https://impactium.fun/";
}

function toggleLanguageChoosePanel() {
  const languagePack = document.querySelector('language');
  if (languagePack.classList.contains('active')) {
    languagePack.classList.remove('active');
  } else {
    languagePack.classList.add('active');
  }
}

function openFullScreen() {
  if (!board.classList.contains('active')) {
    board.classList.add('active');
    closeFullScreenButton.classList.add('active');
  }
}
function closeFullScreen() {
  if (board.classList.contains('active')) {
    board.classList.remove('active');
    closeFullScreenButton.classList.remove('active');
  }
}

function deleteFileTimer(filename, button) {
  const text = document.querySelector('.existing-file.active p');
  text.classList.add('on-delete-text');
  button.classList.add('on-delete');

  let timer = setTimeout(() => {
    deleteFile(filename, button);
    button.removeEventListener('mouseup', mouseUpHandler);
    button.removeEventListener('mouseleave', mouseLeaveHandler);
    return
  }, 3000);

  button.addEventListener('mouseup', () => {
    clearTimeout(timer);
    button.classList.remove('on-delete');
    text.classList.remove('on-delete-text');
  });

  button.addEventListener('mouseleave', () => {
    clearTimeout(timer);
    button.classList.remove('on-delete');
    text.classList.remove('on-delete-text');
  });
}

function deleteFile(filename, button) {
  fetch(`/php/delete`, {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({ filename }),
  })
  .then(response => {
    if (response.status === 200) {
      return response.text();
    }
  })
  .then(data => {
    const fileButton = button.closest('.file-button');
    startRemoveAnimation(fileButton);
    history.pushState(null, null, `/php`);
    clearRenderedArea();
  })
  .catch(error => {
    console.error(error);
  });
}

function createNewFile() {
  const isValid = checkValidFilename();
  if (!isValid) return

  const filename = phpFilenameBlock.value;
  fetch(`/php/create`, {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({ filename }),
  })
  .then(response => {
    if (response.status === 200) {
      return response.text();
    }
  })
  .then(data => {

    const blocks = document.querySelectorAll('.top .existing-file');
    blocks.forEach(block => {
      block.classList.remove('active');
    });

    const newBlockHTML = `
      <div class="file-button existing-file active" onclick="phpOpen('${data}', this)">
        <p>${data}.php</p>
        <div class="image-wrapper" onmousedown="deleteFileTimer('${data}', this)">
          <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewBox="0 0 24 24" fill="none">
            <path d="M4 6H20M16 6L15.7294 5.18807C15.4671 4.40125 15.3359 4.00784 15.0927 3.71698C14.8779 3.46013 14.6021 3.26132 14.2905 3.13878C13.9376 3 13.523 3 12.6936 3H11.3064C10.477 3 10.0624 3 9.70951 3.13878C9.39792 3.26132 9.12208 3.46013 8.90729 3.71698C8.66405 4.00784 8.53292 4.40125 8.27064 5.18807L8 6M18 6V16.2C18 17.8802 18 18.7202 17.673 19.362C17.3854 19.9265 16.9265 20.3854 16.362 20.673C15.7202 21 14.8802 21 13.2 21H10.8C9.11984 21 8.27976 21 7.63803 20.673C7.07354 20.3854 6.6146 19.9265 6.32698 19.362C6 18.7202 6 17.8802 6 16.2V6M14 10V17M10 10V17" stroke="#454545" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
      </div>
    `;

    const children = topNav.children;
    children[0].insertAdjacentHTML('afterend', newBlockHTML);

    phpFilenameWrapper.classList.remove('active');
    newFileButton.classList.remove('active');
    phpFilenameBlock.value = '';
    phpOpen(filename);
  })
  .catch(error => {
    console.error(error);
  });
}

function savePHP() {
  const code = document.getElementById('phpCode').value;
  let filename = document.querySelector('.top .existing-file.active p').textContent;
  const parts = filename.split('.');
  filename = parts.slice(0, -1).join('.');
  startSaveAnimation();

  fetch(`/php/save`, {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({ code, filename }),
  })
  .then(response => {
    if (response.status === 200) {
      return response.text();
    }
  })
  .then(data => {
    
  })
  .catch(error => {
    console.error(error);
  });
}
function startSaveAnimation() {
  const loader = document.querySelector('.bottom .savePhpCode .image-wrapper .loader');
  loader.classList.add('active');
  setTimeout(() => {
    loader.classList.remove('active');
  }, 1500);
}
function startRemoveAnimation(block) {
  block.classList.add('delete');
  setTimeout(() => {
    block.remove();
  }, 2000);
}
</script>
</body>
</html>